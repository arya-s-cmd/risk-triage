import React,{useEffect,useState} from 'react';const API=import.meta.env.VITE_API_BASE||'http://localhost:8000';const bandColor=(b)=>({critical:'#b91c1c',high:'#dc2626',medium:'#f59e0b',low:'#16a34a'}[b]||'#6b7280');export default function App(){const [queue,setQueue]=useState([]);const [band,setBand]=useState('');const [msg,setMsg]=useState('');const [sources,setSources]=useState([]);async function loadQueue(){const r=await fetch(`${API}/queue${band?`?band=${band}`:''}`);if(!r.ok){setMsg('API error');return;}setQueue(await r.json());}async function runScoring(){setMsg('Scoring…');const r=await fetch(`${API}/score/run`,{method:'POST'});if(r.ok){setMsg('Scored');await loadQueue();}else{setMsg('Score failed');}}async function addDemo(){const body={external_id:'EXT-'+Math.floor(Math.random()*99999),source:'portal',phone:'+91 9876543210',email:'victim@example.com',ip:'10.0.1.'+Math.floor(Math.random()*200+1),timestamp:new Date().toISOString(),text:'KYC OTP asked on call; UPI fraud suspected.'};const r=await fetch(`${API}/ingest`,{method:'POST',headers:{'Content-Type':'application/json'},body:JSON.stringify(body)});if(r.ok){setMsg('Ingested');await runScoring();}else{setMsg('Ingest failed');}}async function fetchSources(){const r=await fetch(`${API}/sources`);if(r.ok){setSources(await r.json());}}async function updateSource(src,trust){const r=await fetch(`${API}/sources`,{method:'PUT',headers:{'Content-Type':'application/json'},body:JSON.stringify({source:src,trust:parseFloat(trust)})});if(r.ok){setMsg('Trust saved');fetchSources();await runScoring();}}async function explain(id){const r=await fetch(`${API}/explain/${id}`);if(!r.ok)return;const j=await r.json();alert('Score: '+j.score+' ('+j.band+')\n\n'+JSON.stringify(j.explanation,null,2));}useEffect(()=>{loadQueue();fetchSources();},[]);useEffect(()=>{loadQueue();},[band]);return(<div style={{fontFamily:'Inter, system-ui',padding:'24px'}}><h1>Complaint Risk Triage</h1><div style={{display:'flex',gap:8,alignItems:'center',flexWrap:'wrap'}}><button onClick={runScoring}>Run Scoring</button><button onClick={addDemo}>Add Demo Complaint</button><label>Filter:</label><select value={band} onChange={e=>setBand(e.target.value)}><option value=''>All</option><option value='critical'>Critical</option><option value='high'>High</option><option value='medium'>Medium</option><option value='low'>Low</option></select><span style={{marginLeft:12}}>{msg}</span></div><TrustPanel sources={sources} onSave={updateSource}/><table width='100%' cellPadding='6' style={{marginTop:16,borderCollapse:'collapse'}}><thead><tr><th>ID</th><th>Score</th><th>Band</th><th>Source</th><th>Phone</th><th>Email</th><th>IP</th><th>Time</th><th>Text</th><th>Explain</th></tr></thead><tbody>{queue.map(q=>(<tr key={q.id} style={{borderTop:'1px solid #ddd'}}><td>{q.id}</td><td><strong>{q.score?.toFixed?.(3)??'—'}</strong></td><td><span style={{padding:'2px 8px',background:bandColor(q.risk_band),color:'#fff',borderRadius:12}}>{q.risk_band||'—'}</span></td><td>{q.source}</td><td>{q.phone||'—'}</td><td>{q.email||'—'}</td><td>{q.ip||'—'}</td><td>{q.timestamp||'—'}</td><td>{(q.text||'').slice(0,80)}</td><td><button onClick={()=>explain(q.id)}>Explain</button></td></tr>))}</tbody></table></div>);}function TrustPanel({sources,onSave}){return(<div style={{marginTop:16,padding:12,border:'1px solid #ddd',borderRadius:12}}><strong>Source Trust (lower trust → higher risk)</strong><table width='100%' cellPadding='6' style={{marginTop:8}}><thead><tr><th>Source</th><th>Trust (0..1)</th><th>Save</th></tr></thead><tbody>{sources.map(s=>(<tr key={s.id}><td>{s.source}</td><td><input type='number' step='0.05' min='0' max='1' defaultValue={s.trust} id={`trust-${s.id}`}/></td><td><button onClick={()=>{const v=document.getElementById(`trust-${s.id}`).value;onSave(s.source,v);}}>Save</button></td></tr>))}</tbody></table><p style={{color:'#555',marginTop:8}}>Tip: lower trust for low-signal channels (e.g., email) if they tend to be noisier.</p></div>);}